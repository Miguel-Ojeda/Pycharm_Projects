Optional se usa cuando queremos apuntar que, por ejemplo, el valor a retornar es de un determinado tipo
o simplemente None.

def dispense_frank_v2() -> Optional[Frank]:
    if random.random() <= 0.8:
        return Frank('frankfourt')
    else:
        return None

En lugar de Optional[Frank] podíamos haber puesto también Frank | None
o Union[Frank, None]

Lo bueno es que el entorno nos avisa de fallos.
Por ejemplo, si queremos usar el método XXX en el objeto devuelto, nos avisa
que None no tiene definido ese método.

Lo mismo haría mypy (si usarmos --strict-optional), con lo que nos obliga a tener
en cuenta los casos en los que el objeto es None (es como un chivato que nos avisa
que puede haber peligro)


---------------------------

Union se usa cuando el tipo puede ser uno de varios...
Union type; Union[X, Y] is equivalent to X | Y and means either X or Y.

def hora_es(entero: int) -> Union[int, str]:
    if entero < 18:
        return entero
    else:
        return 'NOCHE'
